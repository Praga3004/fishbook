service cloud.firestore {
  match /databases/{database}/documents {
    // Allow read access to all documents
    match /{document=**} {
      allow read: if true;
    }

    // Define rules for the "users" collection
    match /user/{userId} {
      allow read, write;

      // Constraints for usertype, username, email, and phonenum
      allow write: if request.resource.data.keys().hasAll(['usertype', 'username', 'email', 'phonenum']) &&
                    request.resource.data.usertype is bool &&
                    request.resource.data.username is string &&
                    request.resource.data.email is string &&
                    request.resource.data.phonenum is int &&
                    request.resource.data.phonenum >= 0 &&
                    request.resource.data.phonenum <= 9999999999;
    }

    // Define rules for the "ownerdetail" collection
    match /user/{userId}/ownerdetail/{ownerId} {
      allow read, write;
      allow write: if request.resource.data.keys().hasAll(['name', 'phoneNumber', 'share', 'invest']) &&
                          request.resource.data.name is string &&
                          request.resource.data.phoneNumber is string &&
                          request.resource.data.share is int &&
                          request.resource.data.invest is int &&
                          request.resource.data.share >= 0 &&
                          request.resource.data.invest >= 0;
    }

    // Define rules for the "crewdetails" collection
match /user/{userId}/crewdetails/{crewdetailId} {
  allow read, write;
  allow write: if request.resource.data.keys().hasAll(['name', 'phoneNumber', 'otherSharePercentage']) &&
                      request.resource.data.name is string &&
                      request.resource.data.phoneNumber is string &&
                      request.resource.data.otherSharePercentage is int &&
                      request.resource.data.otherSharePercentage >= 0 &&
                      request.resource.data.otherSharePercentage <= 100;
}

  }
}
